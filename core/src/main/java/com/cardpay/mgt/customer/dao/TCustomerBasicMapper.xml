<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cardpay.mgt.customer.dao.TCustomerBasicMapper">
    <resultMap id="BaseResultMap" type="com.cardpay.mgt.customer.model.TCustomerBasic">
        <result column="ID" jdbcType="DECIMAL" property="id"/>
        <result column="CNAME" jdbcType="VARCHAR" property="cname"/>
        <result column="SEX" jdbcType="DECIMAL" property="sex"/>
        <result column="CERTIFICATE_TYPE" jdbcType="DECIMAL" property="certificateType"/>
        <result column="CERTIFICATE_NUMBER" jdbcType="VARCHAR" property="certificateNumber"/>
        <result column="TEL" jdbcType="VARCHAR" property="tel"/>
        <result column="HOME_ADDRESS" jdbcType="VARCHAR" property="homeAddress"/>
        <result column="MARRIAGE_STATUS" jdbcType="DECIMAL" property="marriageStatus"/>
        <result column="EDUCATION_DEGREE" jdbcType="DECIMAL" property="educationDegree"/>
        <result column="USER_ID" jdbcType="DECIMAL" property="userId"/>
        <result column="CUSTOMER_MANAGER_ID" jdbcType="DECIMAL" property="customerManagerId"/>
        <result column="CREATE_BY" jdbcType="DECIMAL" property="createBy"/>
        <result column="CREATE_TIME" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="MODIFY_BY" jdbcType="DECIMAL" property="modifyBy"/>
        <result column="MODIFY_TIME" jdbcType="TIMESTAMP" property="modifyTime"/>
        <result column="CUSTOMER_STATUS" jdbcType="DECIMAL" property="customerStatus"/>
    </resultMap>

    <resultMap id="BaseResultMapVo" type="com.cardpay.mgt.customer.model.vo.TCustomerTransferVo">
        <result column="ID" jdbcType="VARCHAR" property="id"/>
        <result column="CNAME" jdbcType="VARCHAR" property="name"/>
    </resultMap>

    <!--潜在客户挖掘-->
    <select id="getProspectiveCustomers" resultMap="BaseResultMap">
        SELECT c.*
        FROM t_customer_basic c, t_customer_industry t
        where c.id = t.customer_id AND
            t.industry_id IN (
                SELECT a.industry_id
                FROM
                    (SELECT i.industry_id, COUNT(i.industry_id) c
                    from t_customer_industry i
                    GROUP BY i.industry_id
                    ORDER BY c DESC ) a
                where rownum BETWEEN 1 AND 5
            )
    </select>

    <!--查询身份证是否存在-->
    <select id="isIdCardExist" parameterType="Long" resultType="Integer">
        SELECT COUNT(1)
        FROM t_customer_basic basic
        WHERE basic.CERTIFICATE_NUMBER = #{idCard}
    </select>

    <!--查询客户经理所属客户-->
    <select id="queryCustomer" resultMap="BaseResultMapVo">
        SELECT customer.id id, customer.cname name FROM T_CUSTOMER_BASIC customer, T_CUSTOMER_MANAGER manager
        WHERE manager.id = customer.CUSTOMER_MANAGER_ID AND customer.CUSTOMER_STATUS !=3
        AND manager.id = #{managerId}
    </select>

    <!--更新客户状态-->
    <update id="updateStatus" parameterType="Map">
        <foreach item="item" index="index" collection="customerIds" open="BEGIN" separator=";" close=";END;">
            UPDATE T_CUSTOMER_BASIC
            <set>
                CUSTOMER_STATUS = #{status}, CUSTOMER_MANAGER_ID = #{managerId}
            </set>
            where id = #{item}
        </foreach>
    </update>

    <!--按条件查询客户信息-->
    <select id="queryCustomerByCondition" parameterType="Map" resultMap="BaseResultMap">
        SELECT basic.*
        FROM T_CUSTOMER_BASIC basic, T_CUSTOMER_MANAGER manager
        <where>
            basic.CUSTOMER_MANAGER_ID = MANAGER.id
            AND MANAGER.ORGANIZATION_ID =
            (
            SELECT ORGANIZATION_ID
            FROM T_CUSTOMER_MANAGER
            WHERE
            USER_ID = #{customerManagerId}
            )
            AND basic.CUSTOMER_STATUS != 3
            <if test="cname!=null and cname!=''">
                AND basic.cname LIKE CONCAT(CONCAT('%',#{cname}),'%')
            </if>
            <if test="certificateNumber!=null and certificateNumber!=''">
                AND basic.CERTIFICATE_NUMBER LIKE CONCAT(CONCAT('%',#{certificateNumber}),'%')
            </if>
        </where>
    </select>

</mapper>
